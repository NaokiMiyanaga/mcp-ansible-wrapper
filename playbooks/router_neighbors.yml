---
- name: Router neighbors via CLI
  hosts: "{{ host | default('routers') }}"
  gather_facts: no
  vars:
    _mgmt_address: "{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}"
    _is_router: >-
      {{
        ('routers' in group_names)
        or (hostvars[inventory_hostname].device_role | default('')).lower() in ['router','edge-router','core-router']
        or (inventory_hostname is match('^(r|R)[0-9].*'))
      }}
    _interfaces_ip: []
    _ospf_neighbors: {}
    _bgp_summary: {}
    _neighbor_method: "cli"

  tasks:
    - name: Gather interface addresses
      ansible.builtin.command:
        cmd: ip -json addr show
      register: _ip_addr
      changed_when: false
      failed_when: false
      when: _is_router

    - name: Parse interface addresses
      ansible.builtin.set_fact:
        _interfaces_ip: "{{ (_ip_addr.stdout | default('[]', true)) | from_json | default([]) }}"
      when:
        - _is_router
        - (_ip_addr.stdout | default('')) | length > 0

    - name: Gather OSPF neighbors (if available)
      ansible.builtin.command:
        cmd: vtysh -c "show ip ospf neighbor json"
      register: _ospf_raw
      changed_when: false
      failed_when: false
      when: _is_router

    - name: Parse OSPF neighbors
      ansible.builtin.set_fact:
        _ospf_neighbors: "{{ (_ospf_raw.stdout | default('{}', true)) | from_json | default({}) }}"
      when:
        - _is_router
        - (_ospf_raw.stdout | default('')) | length > 0
      ignore_errors: true

    - name: Gather BGP summary (if available)
      ansible.builtin.command:
        cmd: vtysh -c "show bgp summary json"
      register: _bgp_raw
      changed_when: false
      failed_when: false
      when: _is_router

    - name: Parse BGP summary
      ansible.builtin.set_fact:
        _bgp_summary: "{{ (_bgp_raw.stdout | default('{}', true)) | from_json | default({}) }}"
      when:
        - _is_router
        - (_bgp_raw.stdout | default('')) | length > 0
      ignore_errors: true

    - name: Build neighbor payload
      ansible.builtin.set_fact:
        router_neighbors_payload:
          host: "{{ inventory_hostname }}"
          address: "{{ _mgmt_address }}"
          dev_os: "cli"
          method: "{{ _neighbor_method }}"
          interfaces_ip: "{{ _interfaces_ip | default([]) }}"
          ospf_neighbors: "{{ _ospf_neighbors | default({}) }}"
          bgp_summary: "{{ _bgp_summary | default({}) }}"

    - name: Emit neighbor JSON
      ansible.builtin.debug:
        msg: "{{ router_neighbors_payload | to_json }}"
