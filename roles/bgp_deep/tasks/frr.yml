---
- name: BGP summary (FRR, JSON)
  ansible.builtin.command: vtysh -c "show bgp summary json"
  register: frr_sum_raw
  changed_when: false
  when: which_vtysh.rc == 0

- name: Parse FRR summary
  ansible.builtin.set_fact:
    frr_sum: "{{ frr_sum_raw.stdout | from_json }}"
  when: which_vtysh.rc == 0

- name: Collect AFI/SAFI details (FRR, JSON)
  ansible.builtin.command: vtysh -c "show bgp {{ item }} summary json"
  loop: "{{ want_afis | default(['ipv4 unicast']) }}"
  loop_control: { label: "{{ item }}" }
  register: frr_afi_raw
  changed_when: false
  when: which_vtysh.rc == 0

- name: Init AFI/SAFI summaries dict
  ansible.builtin.set_fact:
    frr_afi: {}
  when: which_vtysh.rc == 0

- name: Parse AFI/SAFI summaries (safe combine)
  ansible.builtin.set_fact:
    frr_afi: "{{ frr_afi | combine({ item.item: (item.stdout | from_json) }) }}"
  loop: "{{ frr_afi_raw.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: which_vtysh.rc == 0

- name: Init formatted AFI report
  ansible.builtin.set_fact:
    bgp_afi_report: {}
  when: which_vtysh.rc == 0

- name: Build formatted AFI report per family
  ansible.builtin.set_fact:
    bgp_afi_report: >-
      {{ bgp_afi_report | combine({
          item.key: {
            'accepted_paths': (item.value.acceptedPaths | default(0)),
            'received_paths': (item.value.receivedPaths | default(0)),
            'installed_paths': (item.value.installedPaths | default(0)),
            'rib_count': (item.value.paths | default(0))
          }
        })
      }}
  loop: "{{ (frr_afi | default({})) | dict2items }}"
  when: which_vtysh.rc == 0

- name: Cache FRR peers map
  ansible.builtin.set_fact:
    frr_peers: "{{ (frr_sum | default({})).get('peers', {}) }}"
  when: which_vtysh.rc == 0

- name: Build FRR neighbor/route report
  ansible.builtin.set_fact:
    bgp_report:
      impl: "frr"
      router_id: >-
        {{
          (frr_sum | default({})).get('routerId')
          or (frr_sum | default({})).get('routerIdV4')
          or 'unknown'
        }}
      peers_total: "{{ (frr_peers | default({})) | length }}"
      peers_established: >-
        {{
          (frr_peers | default({}) | dict2items | selectattr('value.state','equalto','Established') | list) | length
        }}
      peers_down: >-
        {{
          (frr_peers | default({}) | dict2items | rejectattr('value.state','equalto','Established') | list) | length
        }}
      down_list: >-
        {{
          (frr_peers | default({}) | dict2items
            | rejectattr('value.state','equalto','Established')
            | map(attribute='key') | list)
        }}
      afi: "{{ bgp_afi_report | default({}) }}"
  when: which_vtysh.rc == 0
